

swagger: '2.0'
info:
  title: 'Busra Su Altin API'
  description: 'API for managing users, houses, and bookings.'
  version: '1.0'
host: '127.0.0.1:5000'
schemes:
  - 'http'
basePath: '/'
paths:
  /users:
    get:
      tags:
        - 'Users'
      summary: 'Get a list of all users'
      responses:
        '200':
          description: 'A list of users'
        '500':
          description: 'Internal Server Error - Failed to establish connection to database'

    post:
      tags:
        - 'Users'
      summary: 'Create a new user'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            type: 'object'
            required:
              - username
              - password
            properties:
              name:
                type: 'string'
                example: 'John Doe'
              username:
                type: 'string'
                example: 'JohnDoe'
              password:
                type: 'string'
                example: 'password123'
      responses:
        '201':
          description: 'Created - User created successfully'
        '400':
          description: 'Bad Request - Missing data for required fields'
        '500':
          description: 'Internal Server Error - Failed to create user'

  /users/{user_id}:
    delete:
      tags:
        - 'Users'
      summary: 'Delete a user'
      parameters:
        - in: 'path'
          name: 'user_id'
          required: true
          type: 'integer'
          description: 'ID of the user to delete'
      responses:
        '200':
          description: 'OK - User deleted successfully'
        '500':
          description: 'Internal Server Error - Failed to delete user'

  /houses:
    get:
      tags:
        - 'Houses'
      summary: 'Get a list of all houses'
      responses:
        '200':
          description: 'A list of houses'
        '500':
          description: 'Internal Server Error - Failed to establish connection to database'
  
  /bookings:
    get:
      tags:
        - 'Bookings'
      summary: 'Get a list of all bookings'
      responses:
        '200':
          description: 'A list of bookings'
        '500':
          description: 'Internal Server Error - Failed to establish connection to database'

  /createAppointment:
    post:
      tags:
        - 'Appointments'
      summary: 'Create a new appointment'
      security:
        - Bearer: []
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            type: 'object'
            required:
              - availabilityStartBooking
              - availabilityEndBooking
              - guestNumberBooking
              - User_idUser
              - House_idHouse
            properties:
              availabilityStartBooking:
                type: 'string'
                format: 'date-time'
                example: '2023-11-27T09:00:00Z'
              availabilityEndBooking:
                type: 'string'
                format: 'date-time'
                example: '2023-11-27T10:00:00Z'
              guestNumberBooking:
                type: 'integer'
                format: 'int64'
                example: 2
              User_idUser:
                type: 'integer'
                format: 'int64'
                example: 1
              House_idHouse:
                type: 'integer'
                format: 'int64'
                example: 1
      responses:
        '201':
          description: 'Created - Appointment created successfully'
        '400':
          description: 'Bad Request - Missing data for required fields'
        '500':
          description: 'Internal Server Error - Failed to create appointment'


  /login:
    post:
      tags:
        - 'Authentication'
      summary: 'Authenticate and get a token'
      parameters:
        - in: 'body'
          name: 'body'
          #type: 'string'
          required: true
          schema:
            type: 'object'
            properties: 
              username:
                type: 'string'
              password:
                type: 'string'
          #description: 'Use the format: `Basic base64(username:password)`'
      responses:
        '200':
          description: 'OK - Token generated successfully'
        '401':
          description: 'Unauthorized - Invalid credentials'
        '500':
          description: 'Internal Server Error - Failed to authenticate'

securityDefinitions:
  Bearer:
    type: 'apiKey'
    name: 'x-access-tokens'
    in: 'header'
security:
  - Bearer: []
